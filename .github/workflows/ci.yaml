name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: ${{ matrix.os }}, 🐍=${{ matrix.python-version }}, OpenMM=${{ matrix.openmm }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        openmm: ["true", "false"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        exclude:
          # As of March 2021, these conda builds are broken and unavailable
          - openmm: "true"
            python-version: "3.10"

    env:
      CI_OS: ${{ matrix.os }}
      PYVER: ${{ matrix.python-version }}
      PYTEST_ARGS: -v
      COV: --cov=openff/units --cov-report=xml --cov-config=setup.cfg --cov-append

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        mamba-version: "*"
        channels: conda-forge,defaults
        channel-priority: true
        environment-file: devtools/conda-envs/test_env.yaml
        auto-activate-base: false

    - name: Optionally install OpenMM
      if: ${{ matrix.openmm == 'true' }}
      run: |
        mamba install "openmm >=7.6" -c conda-forge -yq

    - name: Verify OpenMM is not installed when not expected
      if: ${{ matrix.openmm == 'false' }}
      run: |
        # If the number of packages matching "*openmm*" is greater than zero
        if [[ $(conda list | grep openmm | wc -l) -gt 0 ]]; then
          conda list;
          exit 1;
        fi

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      run: |
        conda info
        conda list

    - name: Install package
      run: |
        python setup.py develop --no-deps

    - name: Run mypy
      if: ${{ matrix.python-version == 3.9 }}
      run: |
        mypy --namespace-packages -p "openff.units"

    - name: Run unit tests with OpenMM
      if: ${{ matrix.openmm == 'true' }}
      run: |
        pytest $PYTEST_ARGS $COV openff/units/tests/

    - name: Run unit tests without OpenMM
      if: ${{ matrix.openmm == 'false' }}
      run: |
        pytest $PYTEST_ARGS $COV openff/units/tests/ \
          --ignore=openff/units/tests/test_simtk.py \
          --ignore=openff/units/tests/test_openmm.py

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
